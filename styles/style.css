/* ПРЕДОПРЕДЕЛЕННЫЕ СТИЛИ */

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  block-size: 100%;
}

h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
blockquote,
fieldset {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 4px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: rgb(217 217 217 / 10%);
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #D9D9D9;
}

/* ПЕРЕИСПОЛЬЗУЕМЫЕ СТИЛИ */

/*
[x] - Добавьте в ваш код класс .visually-hidden. В HTML он уже добавлен необходимым элементам. Остались стили. Вот они:
*/

.visually-hidden {
  block-size: 1px;
  clip-path: inset(50%);
  clip: rect(0 0 0 0);
  inline-size: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

.button {
  background-color: transparent;
  border: 1px solid #fff;
  color: #fff;
  cursor: pointer;
  font-family: "Fira Sans Condensed", sans-serif;
  font-size: 18px;
  font-weight: 700;
  line-height: 21.6px;
  text-align: center;
}

.button:hover {
  text-decoration: underline;
}

.button:active {
  background-color: #545050;
}

.button:focus {
  outline: none;
  text-decoration: none;
}

.button:focus-visible {
  outline-offset: 1px;
  outline: 1px solid #fff;
}

/* ОСНОВНЫЕ СТИЛИ */

/*
[x] - Задайте флекс для верхнего контейнера .page.
[x] - Расположить блок .content посередине .page.
*/

.page {
  background-color: #1b1919;
  block-size: 100%;
  color: #fff;
  display: flex;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-size: 18px;
  inline-size: 1200px;
  margin: auto;
  place-content: center;
}

/*
[x] - Задайте грид для .content и пропишите grid-area для всех элементов внутри.
[x] - Расположить элементы .content в строку, прижав к низу вертикальной оси.
[x] - Задать горизонтальные размеры .content и отступы между его элементами.
*/

.content {
  align-items: end;
  display: grid;
  gap: 30px;
  grid-template-areas:
    "result content__details";
  grid-template-columns: 711px 399px;
  height: 534px;
  margin: auto;
  padding: 0 30px;
  width: 100%;
}

.result {
  grid-area: result;
  height: 456px;
}

/*
[x] - Задайте размеры контейнеру .result__video-container и добавьте отступ снизу.
*/

.result__video-container {
  height: 386px;
  margin-bottom: 16px;
  position: relative;
}

/*
[x] - Поместите видео в этот контейнер так, чтобы оно занимало всю ширину и высоту и не выходило за пределы. Используйте object-fit.
*/

.result__video {
  height: 100%;
  object-fit: cover;
  object-position: center;
  width: 100%;
}

/*
[x] - Расположить элементы .search-form в строку, пропорционально распределить между ними свободное пространство и прижать их к началу контейнера.
*/

.search-form {
  align-items: flex-end;
  display: flex;
  gap: 40px;
  height: 54px;
  justify-content: flex-start;
}

/*
[x] - Сбросьте border у fieldset
*/

.search-form__fieldset {
  border: none;
  display: flex;
  flex-direction: column;
}

/*
[x] - Оформите текст элементов .search-form__fieldset-title. Обратите внимание на вес шрифта, размер, отступы.
*/

.search-form__fieldset-title {
  color: #fff;
  font-family: "Fira Sans Condensed", sans-serif;
  font-size: 18px;
  font-weight: 400;
  line-height: 21.6px;
}

/*
[x] - Задайте .search-form__label у инпутов для поиска городов и времени суток.
Расставьте элементы внутри .search-form__label в линию. Примените свойство display: flex;. Также вам пригодится правило width: fit-content;
*/

.search-form__label {
  align-items: center;
  cursor: pointer;
  display: flex;
  gap: 5px;
  margin-top: 5px;
  width: fit-content;
}

/*
[x] - Факультативный шаг.
Когда элемент в фокусе — добавьте границу вокруг с использованием outline. У этого элемента нужно сбросить обводку в состоянии фокуса и вместо этого сделать границу у лейбла, который его окружает. Лейбл должен получать границу только когда поле находится в состоянии :focus-visible, но не :focus. Чтобы это реализовать, можно применить хитрую комбинацию псевдоклассов на классе лейбла — :has(:focus-visible).
*/

.search-form__label:hover .search-form__label-text {
  text-decoration: underline;
}

.search-form__label:has(:focus-visible) {
  outline-offset: 1px;
  outline: 1px solid #fff;
}

.search-form__label-text {
  color: #fff;
  font-size: 18px;
  font-weight: 400;
  line-height: 21.6px;
}

.search-form__label-text:hover {
  cursor: pointer;
  text-decoration: underline;
}

/*
[x] - Задайте стиль текстовому полю.
[x] - Оставьте border сверху и снизу.
[x] - Установите цвет шрифта и фона согласно макету.
[x] - Текстовому задайте свойство appearance: none;. Так в разных браузерах будут нужные вам стили.
*/

.search-form__textfield {
  appearance: none;
  background-color: transparent;
  border: none;
  border-bottom: 1px solid #fff;
  border-top: 1px solid #fff;
  color: #fff;
  font-family: "Fira Sans Condensed", sans-serif;
  font-size: 18px;
  font-weight: 400;
  height: 27px;
  width: 225px;
}

.search-form__textfield:focus {
  outline: none;
}

.search-form__textfield:focus-visible {
  outline: none;
}

.search-form__textfield:active {
  outline-offset: -1px;
  outline: 1px solid #fff;
}

.search-form__textfield:hover {
  cursor: text;
}

.search-form__pseudo-checkbox {
  align-items: center;
  border: 1px solid #fff;
  display: flex;
  height: 19px;
  justify-content: center;
  width: 19px;
}

.search-form__checkbox:checked + .search-form__pseudo-checkbox::before {
  background-color: #fff;
  content: "";
  display: block;
  height: 15px;
  width: 15px;
}

/*
[x] - Расположите чекбоксы в линию с помощью обёртки .search-form__checkbox-list. Используйте display: flex; и gap.
*/

.search-form__checkbox-list {
  display: flex;
  gap: 15px;
  padding-bottom: 5px;
}

.search-form__submit-button {
  height: 34px;
  width: 194px;
}

/*
[x] - Растянуть .content__details на всю доступную ширину и высоту контейнера и добавить отступы между заголовком и зоной с карточками.
*/

.content__details {
  display: flex;
  flex-direction: column;
  gap: 22px;
  grid-area: content__details;
  height: 100%;
  width: 100%;
}

/*
[x] - Оформите элемент .title и вложенный в него .content__accent.
*/

.title {
  color: #fff;
  font-family: "Oswald", sans-serif;
  font-size: 75px;
  font-weight: 700;
  line-height: 70.5px;
  text-transform: uppercase;
}

.content__accent {
  color: #545050;
}

.content__list-container {
  height: 298px;
  overflow-y: auto;
  position: relative;
}

/*
[x] - Установить вертикальный размер для .content__list и добавить скролл при переполнении. Скроллбар (полоса прокрутки) скрывать не нужно, он уже стилизован в соответствии с макетом.
*/

.content__list {
  display: flex;
  flex-direction: column;
  gap: 30px;
  margin-bottom: 30px;
  min-height: 298px;
  overflow-y: auto;
  position: relative;
}

/*
[x] - Создайте вертикальные отступы между элементами .content__list-item. Используйте свойство gap.
*/

.content__list-item {
  display: flex;
  gap: 30px;
  padding: 0 3px 0 2px;
}

/*
[x] - Расположите элементы внутри контейнера .content__video-card в строку, прижав к началу контейнера по дополнительной оси.
*/

.content__video-card {
  align-items: flex-start;
  display: flex;
}

/*
[x] - Задайте размеры .content__video-card-thumbnail и расположите в них изображение так, чтобы оно закрывало весь элемент и было выровнено по центру. Используйте object-fit и object-position.
*/

.content__video-card-thumbnail {
  height: 103px;
  object-fit: cover;
  object-position: center;
  width: 194px;
}

/*
[x] - Сделайте так, чтобы .content__video-card-description-container занимал всё доступное пространство (не занятое картинкой). Вам поможет свойство flex-grow.
*/

.content__video-card-description-container {
  flex-grow: 1;
}

/*
[x] - Оформите текст .content__video-card-title и учтите возможность переполнения, заменяя излишний текст на “…”.
*/

.content__video-card-title {
  color: #fff;
  font-family: "Oswald", sans-serif;
  font-size: 30px;
  font-weight: 700;
  line-height: 30px;
  margin-bottom: 6px;
  overflow: hidden;
  text-overflow: ellipsis;
  text-transform: uppercase;
  white-space: nowrap;
  width: 196px;
}

/*
[ ] - Обратите внимание на значение line-height для .content__video-card-description в макете. Здесь тоже нужно учесть возможность переполнения, для этого воспользуйтесь свойством line-clamp.
*/

.content__video-card-description {
  color: #fff;
  font-family: "Fira Sans Condensed", sans-serif;
  font-size: 18px;
  font-weight: 400;
  line-height: 16.2px;
}

.more-button {
  height: 34px;
  margin: 2px;
  width: 390px;
}

/*
[x] - Уберите дефолтное подчёркивание и заменить цвет текста у ссылки .content__card-link.
*/

.content__card-link {
  color: #fff;
  display: block;
  text-decoration: none;
}

.content__card-link:hover {
  text-decoration: underline;
}

.content__card-link:active {
  background-color: #545050;
}

.content__card-link:focus {
  outline: none;
}

.content__card-link:focus-visible {
  outline: 1px solid #fff;
}

.content__card-link_current {
  background-color: #545050;
}
